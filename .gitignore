# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.*
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
virtualenv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project specific
data/cache/
data/processed/
data/backups/
logs/
*.pkl
*.db
*.sqlite
*.sqlite3
portfolio_state.json
price_cache.json

# Sensitive data
secrets/
credentials/
*.key
*.pem
*.p12
*.pfx
api_keys.json
config.local.json

# Temporary files
*.tmp
*.temp
*.bak
*.swp
*.swo
*.orig
.~lock.*

# Data files (except samples)
data/raw/*
!data/raw/sample_transactions.csv
!data/raw/.gitkeep

# Keep empty directories
!data/
!data/raw/
!data/processed/
!data/cache/
!logs/
!tests/fixtures/

# Large files
*.csv
!tests/fixtures/*.csv
*.xlsx
*.xls
*.json
!package.json
!tsconfig.json
!.vscode/settings.json.example

# Profiling
*.prof
*.lprof
.profile_stats/

# Documentation builds
docs/_static/
docs/_templates/
site/

# CI/CD
.github/workflows/local/
.gitlab-ci-local/
.circleci/local/

# Docker volumes
docker-volumes/
.docker/

# Node (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Backup files
backup/
backups/
*.backup
*.old

# Archive files
*.zip
*.tar
*.tar.gz
*.tgz
*.rar
*.7z

# SSL certificates
*.crt
*.csr

# Editor backups
\#*\#
.\#*

# Compiled source
*.com
*.class
*.dll
*.exe
*.o

# Packages
*.dmg
*.gz
*.iso
*.jar

# Databases
*.sql
!tests/fixtures/*.sql

# OS generated files
.Spotlight-V100
.Trashes
Icon?
._*

# Custom
.notes/
.todo
TODO.md
NOTES.md
scratch/
playground/



# Sspecific portfolio files you have
data/portfolios/
data/cache/portfolio_state.pkl
data/cache/price_cache.json
price_history.db
price_history.db-shm
price_history.db-wal
test_transactions.db
identifier.sqlite

# Specific transaction files shown in your directory
data/raw/portfolio_transactions.csv
data/raw/portfolio_transactions copy.csv
data/raw/portfolio_transactions_backup.csv
data/raw/portfolio_transactions_copy.csv
data/raw/transactions.csv
data/raw/transactions_backup_full.csv

# Reconciliation files that might contain sensitive data
portfolio_reconciliation.json
metrics_calculator_patch.txt

# Any config files with actual settings
config/*.py
!config/__init__.py
!config/settings.py  # Only if it contains no secrets

# Ensure all log patterns are caught
logs/*.log
logs/*.log.*
*.log.*

# Price history database files specifically
data/price_history.db*
data/raw/price_history*

# Backup patterns
data/price_history_backup.db
data/*.backup
data/*backup*

# Specific files from your project
analyze_portfolio_file.py

# Test databases that might be created
data/test_transactions.db

# Any analyze output files
analyze_*.txt
analyze_*.log
*_analysis.csv

# Temporary test files
test_*.csv
!test_simple.py
!test_application.py

# Ensure all transaction files are ignored
data/portfolio_transactions.csv
data/raw/portfolio_transactions_*.csv
data/*.csv
